(This code is contributed by @iuliagroza)

Time Complexity: O(d*(n+b)), where d is the number of digits in the given list, n is the number of elements in the list, and b is the base or bucket size used
Space Complexity: O(n+2^d)

PSEUDOCODE

Radix_Sort(arr, d)
{
  for j=1, j<d, j=j+1
  {
    Integer count[10]={0}
    for i=0, i<n, i=i+1
    {
      count[key of(arr[i]) in pass j] -> count[key of(arr[i]) in pass j]+1
      for k=1, k<10, k=k+1
      {
        count[k] -> count[k] + count[k-1]
        for i=n-1, i>0, i=i-1
        {
          result[count[key of(arr[i])]] -> arr[j]
          count[key of(arr[i])] -> count[key of(arr[i])]-1
          for i=0, i<n, i=i+1
          {
            arr[i] -> result[i]
          }
        }
      }
   }
 }
